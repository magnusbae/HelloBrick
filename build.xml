<?xml version="1.0" encoding="UTF-8"?>
<project name="no.itera.lego.Main" default="upload">

    <property file="build.properties"/>

    <path id="libraries.path">
        <fileset dir="${lejos.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <condition property="isUnixOrMac">
        <or>
            <os family="unix"/>
            <os family="mac"/>
        </or>
    </condition>
    <condition property="isWindows">
        <os family="windows"/>
    </condition>

    <target name="clean" description="delete old files">
        <delete dir="${build.dir}"/>
    </target>

    <target name="install-unixmac" if="isUnixOrMac">
        <get src="http://netcologne.dl.sourceforge.net/project/ev3.lejos.p/0.9.1-beta/leJOS_EV3_0.9.1-beta.tar.gz" dest="."/>
        <untar src="leJOS_EV3_0.9.1-beta.tar.gz" dest="." compression="gzip"/>
    </target>

    <target name="install-windows" if="isWindows">
        <get src="http://netcologne.dl.sourceforge.net/project/ev3.lejos.p/0.9.1-beta/leJOS_EV3_0.9.1-beta_win32.zip" dest="."/>
        <unzip src="leJOS_EV3_0.9.1-beta_win32.zip" dest="."/>
        <move file="leJOS_EV3_0.9.1-beta_win32" toFile="leJOS_EV3_0.9.1-beta"/>
    </target>

    <target name="install" depends="install-unixmac, install-windows" description="install dependencies">
        <mkdir dir="${user.home}/.ant/lib"/>
        <get src="http://downloads.sourceforge.net/project/jsch/jsch.jar/0.1.51/jsch-0.1.51.jar" dest="${user.home}/.ant/lib"/>
    </target>

    <target name="compile" depends="clean" description="compile the source ">
        <!-- Compile the java code from ${source.dir} to ${classes.dir}  -->
        <mkdir dir="${classes.dir}"/>
        <javac
            srcdir="${source.dir}"
            includes="${source.include}"
            excludes="${source.exclude}"
            encoding="${source.encoding}"
            source="${source.version}"
            target="${target.version}"
            destdir="${classes.dir}"
            debug="true"
            includeAntRuntime="false"
            includeJavaRuntime="false"
            verbose="false"
        >
            <classpath refid="libraries.path" />

            <!-- enable warnings -->
            <compilerarg value="-Xlint:${source.warn}"/>
        </javac>
    </target>

    <manifestclasspath property="manifest.classpath" jarfile="${output.jar}">
        <classpath refid="libraries.path"/>
    </manifestclasspath>

    <target name="jar" depends="compile">
        <jar destfile="${output.jar}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
        </jar>

        <echo message="Packaging dependencies (classpath)." />
        <copy todir="${classes.lib}">
            <fileset dir="${class.path}" />
        </copy>
    </target>

    <target name="upload" depends="jar">
        <tstamp />
        <echo message="Deploying software onto EV3 Brick."/>
        <scp todir="${device.user}@${device.host}:${device.dir}" trust="true" password="">
            <fileset file="${output.jar}"/>
        </scp>

        <echo message="Deploying software dependencies onto EV3 Brick." />
        <!--Make sure lib directory exists-->
        <sshexec host="${device.host}"
                 username="${device.user}"
                 trust="yes"
                 password=""
                 command="mkdir -p ${device.dir}/lib"
        />
        <scp todir="${device.user}@${device.host}:${device.dir}/lib/" trust="true" password="">
            <fileset dir="${classes.lib}"/>
        </scp>
    </target>

    <target name="run">
        <sshexec
            host="${device.host}"
            username="${device.user}"
            password=""
            trust="true"
            command="jrun -cp ${device.dir}/${output.jar} lejos.internal.ev3.EV3Wrapper ${main.class}"
        />
    </target>

    <target name="stop">
        <sshexec
            host="${device.host}"
            username="${device.user}"
            password=""
            trust="true"
            command="kill $(ps -w | grep '[j]ava.*${output.jar}' | awk '{print $1}')"
        />
    </target>

    <!-- generate javadocs -->
    <target name="docs" description="generate javadocs">
        <delete dir="${javadoc.dir}"/>
        <mkdir dir="${javadoc.dir}"/>
        <javadoc
            destdir="${javadoc.dir}"
            source="${source.version}"
            encoding="${source.encoding}"
            charset="utf-8"
            locale="en_US"
            author="true"
            access="protected"
            windowtitle="Project documentation"
            verbose="false"
        >
            <classpath refid="libraries.path"/>

            <packageset dir="${source.dir}"
                includes="${source.include}"
                excludes="${source.exclude}"
            />
        </javadoc>
    </target>

    <!-- zip the project -->
    <target name="dist.zip" description="generate zip of sources">
        <zip
            destfile="${dist.zip}"
            basedir="${basedir}"
            includes="${dist.include}"
            excludes="${dist.exclude}"
        />
    </target>
</project>
